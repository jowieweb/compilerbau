<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>10</x><y>10</y><w>300</w><h>105</h> </coordinates><panel_attributes>JavaLexerBaseListener
--
--
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>360</x><y>10</y><w>300</w><h>105</h> </coordinates><panel_attributes>JavaLexerBaseVisitor&lt;T&gt;
--
--
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>710</x><y>10</y><w>300</w><h>420</h> </coordinates><panel_attributes>JavaLexerLexer
--
_# _decisionToDFA: DFA[]_
_# _sharedContextCache: PredictionContextCache_
_+ T__0: int_
_+ channelNames: String[]_
_+ modeNames: String[]_
_+ ruleNames: String[]_
_- _LITERAL_NAMES: String[]_
_- _SYMBOLIC_NAMES: String[]_
_+ VOCABULARY: Vocabulary_
_+ tokenNames: String[]_
_+ _serializedATN: String_
_+ _ATN: ATN_
--
+getTokenNames(): String[]
+getVocabulary(): Vocabulary
+JavaLexerLexer(input: CharStream)
+getGrammarFileName(): String
+getRuleNames(): String[]
+getSerializedATN(): String
+getChannelNames(): String[]
+getModeNames(): String[]
+getATN(): ATN
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>1060</x><y>10</y><w>300</w><h>1125</h> </coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
JavaLexerListener
--
--
enterR(ctx: JavaLexerParser.RContext)
exitR(ctx: JavaLexerParser.RContext)
enterAccessmod(ctx: JavaLexerParser.AccessmodContext)
exitAccessmod(ctx: JavaLexerParser.AccessmodContext)
enterParameter(ctx: JavaLexerParser.ParameterContext)
exitParameter(ctx: JavaLexerParser.ParameterContext)
enterConstructor(ctx: JavaLexerParser.ConstructorContext)
exitConstructor(ctx: JavaLexerParser.ConstructorContext)
enterMethod_sig(ctx: JavaLexerParser.Method_sigContext)
exitMethod_sig(ctx: JavaLexerParser.Method_sigContext)
enterMethod_call(ctx: JavaLexerParser.Method_callContext)
exitMethod_call(ctx: JavaLexerParser.Method_callContext)
enterMethod_call_param(ctx: JavaLexerParser.Method_call_paramContext)
exitMethod_call_param(ctx: JavaLexerParser.Method_call_paramContext)
enterCast(ctx: JavaLexerParser.CastContext)
exitCast(ctx: JavaLexerParser.CastContext)
enterMethod(ctx: JavaLexerParser.MethodContext)
exitMethod(ctx: JavaLexerParser.MethodContext)
enterScope(ctx: JavaLexerParser.ScopeContext)
exitScope(ctx: JavaLexerParser.ScopeContext)
enterExpression(ctx: JavaLexerParser.ExpressionContext)
exitExpression(ctx: JavaLexerParser.ExpressionContext)
enterCondition(ctx: JavaLexerParser.ConditionContext)
exitCondition(ctx: JavaLexerParser.ConditionContext)
enterIf_cond(ctx: JavaLexerParser.If_condContext)
exitIf_cond(ctx: JavaLexerParser.If_condContext)
enterVariable_def(ctx: JavaLexerParser.Variable_defContext)
exitVariable_def(ctx: JavaLexerParser.Variable_defContext)
enterVar_assign(ctx: JavaLexerParser.Var_assignContext)
exitVar_assign(ctx: JavaLexerParser.Var_assignContext)
enterAttribute(ctx: JavaLexerParser.AttributeContext)
exitAttribute(ctx: JavaLexerParser.AttributeContext)
enterDatatype(ctx: JavaLexerParser.DatatypeContext)
exitDatatype(ctx: JavaLexerParser.DatatypeContext)
enterScope_body(ctx: JavaLexerParser.Scope_bodyContext)
exitScope_body(ctx: JavaLexerParser.Scope_bodyContext)
enterFor_loop(ctx: JavaLexerParser.For_loopContext)
exitFor_loop(ctx: JavaLexerParser.For_loopContext)
enterFor_each_loop(ctx: JavaLexerParser.For_each_loopContext)
exitFor_each_loop(ctx: JavaLexerParser.For_each_loopContext)
enterWhile_loop(ctx: JavaLexerParser.While_loopContext)
exitWhile_loop(ctx: JavaLexerParser.While_loopContext)
enterDo_while_loop(ctx: JavaLexerParser.Do_while_loopContext)
exitDo_while_loop(ctx: JavaLexerParser.Do_while_loopContext)
enterClass_def(ctx: JavaLexerParser.Class_defContext)
exitClass_def(ctx: JavaLexerParser.Class_defContext)
enterInterface_def(ctx: JavaLexerParser.Interface_defContext)
exitInterface_def(ctx: JavaLexerParser.Interface_defContext)
enterClass_name(ctx: JavaLexerParser.Class_nameContext)
exitClass_name(ctx: JavaLexerParser.Class_nameContext)
enterInterface_name(ctx: JavaLexerParser.Interface_nameContext)
exitInterface_name(ctx: JavaLexerParser.Interface_nameContext)
enterStatic_block(ctx: JavaLexerParser.Static_blockContext)
exitStatic_block(ctx: JavaLexerParser.Static_blockContext)
enterTry_block(ctx: JavaLexerParser.Try_blockContext)
exitTry_block(ctx: JavaLexerParser.Try_blockContext)
enterSwitch_block(ctx: JavaLexerParser.Switch_blockContext)
exitSwitch_block(ctx: JavaLexerParser.Switch_blockContext)
enterSwitch_scope(ctx: JavaLexerParser.Switch_scopeContext)
exitSwitch_scope(ctx: JavaLexerParser.Switch_scopeContext)
enterCase_block(ctx: JavaLexerParser.Case_blockContext)
exitCase_block(ctx: JavaLexerParser.Case_blockContext)
enterMethod_name(ctx: JavaLexerParser.Method_nameContext)
exitMethod_name(ctx: JavaLexerParser.Method_nameContext)
enterGeneric_type_name(ctx: JavaLexerParser.Generic_type_nameContext)
exitGeneric_type_name(ctx: JavaLexerParser.Generic_type_nameContext)
enterComp_op(ctx: JavaLexerParser.Comp_opContext)
exitComp_op(ctx: JavaLexerParser.Comp_opContext)
enterMath_op(ctx: JavaLexerParser.Math_opContext)
exitMath_op(ctx: JavaLexerParser.Math_opContext)
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>1410</x><y>10</y><w>300</w><h>1425</h> </coordinates><panel_attributes>JavaLexerParser
--
_# _decisionToDFA: DFA[]_
_# _sharedContextCache: PredictionContextCache_
_+ T__0: int_
_+ RULE_r: int_
_+ ruleNames: String[]_
_- _LITERAL_NAMES: String[]_
_- _SYMBOLIC_NAMES: String[]_
_+ VOCABULARY: Vocabulary_
_+ tokenNames: String[]_
_+ _serializedATN: String_
_+ _ATN: ATN_
--
+getTokenNames(): String[]
+getVocabulary(): Vocabulary
+getGrammarFileName(): String
+getRuleNames(): String[]
+getSerializedATN(): String
+getATN(): ATN
+JavaLexerParser(input: TokenStream)
+r(): RContext
+accessmod(): AccessmodContext
+parameter(): ParameterContext
+constructor(): ConstructorContext
+method_sig(): Method_sigContext
+method_call(): Method_callContext
+method_call_param(): Method_call_paramContext
+cast(): CastContext
+method(): MethodContext
+scope(): ScopeContext
+expression(): ExpressionContext
+condition(): ConditionContext
+if_cond(): If_condContext
+variable_def(): Variable_defContext
+var_assign(): Var_assignContext
+attribute(): AttributeContext
+datatype(): DatatypeContext
+scope_body(): Scope_bodyContext
+for_loop(): For_loopContext
+for_each_loop(): For_each_loopContext
+while_loop(): While_loopContext
+do_while_loop(): Do_while_loopContext
+class_def(): Class_defContext
+interface_def(): Interface_defContext
+class_name(): Class_nameContext
+interface_name(): Interface_nameContext
+static_block(): Static_blockContext
+try_block(): Try_blockContext
+switch_block(): Switch_blockContext
+switch_scope(): Switch_scopeContext
+case_block(): Case_blockContext
+method_name(): Method_nameContext
+generic_type_name(): Generic_type_nameContext
+comp_op(): Comp_opContext
+math_op(): Math_opContext
{innerclass
RContext
--
--
+EOF(): TerminalNode
+interface_def(): List&lt;Interface_defContext&gt;
+interface_def(i: int): Interface_defContext
+class_def(): List&lt;Class_defContext&gt;
+class_def(i: int): Class_defContext
+RContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
AccessmodContext
--
--
+PUBLIC(): TerminalNode
+PRIVATE(): TerminalNode
+PROTECTED(): TerminalNode
+AccessmodContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
ParameterContext
--
--
+datatype(): DatatypeContext
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+LSQBRACK(): List&lt;TerminalNode&gt;
+LSQBRACK(i: int): TerminalNode
+RSQBRACK(): List&lt;TerminalNode&gt;
+RSQBRACK(i: int): TerminalNode
+DOT(): List&lt;TerminalNode&gt;
+DOT(i: int): TerminalNode
+ParameterContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
ConstructorContext
--
--
+class_name(): Class_nameContext
+LBRACK(): TerminalNode
+RBRACK(): TerminalNode
+scope(): ScopeContext
+accessmod(): AccessmodContext
+STATIC(): TerminalNode
+parameter(): List&lt;ParameterContext&gt;
+parameter(i: int): ParameterContext
+THROWS(): TerminalNode
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+ConstructorContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Method_sigContext
--
--
+method_name(): Method_nameContext
+LBRACK(): TerminalNode
+RBRACK(): TerminalNode
+datatype(): DatatypeContext
+VOID(): TerminalNode
+accessmod(): AccessmodContext
+FINAL(): TerminalNode
+THROWS(): List&lt;TerminalNode&gt;
+THROWS(i: int): TerminalNode
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+parameter(): List&lt;ParameterContext&gt;
+parameter(i: int): ParameterContext
+STATIC(): TerminalNode
+ABSTRACT(): TerminalNode
+Method_sigContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Method_callContext
--
--
+method_name(): Method_nameContext
+LBRACK(): TerminalNode
+LSQBRACK(): TerminalNode
+RBRACK(): TerminalNode
+RSQBRACK(): TerminalNode
+THIS(): TerminalNode
+DOT(): List&lt;TerminalNode&gt;
+DOT(i: int): TerminalNode
+class_name(): List&lt;Class_nameContext&gt;
+class_name(i: int): Class_nameContext
+LPBRACK(): TerminalNode
+RPBRACK(): TerminalNode
+method_call_param(): List&lt;Method_call_paramContext&gt;
+method_call_param(i: int): Method_call_paramContext
+datatype(): DatatypeContext
+Method_callContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Method_call_paramContext
--
--
+method_call(): List&lt;Method_callContext&gt;
+method_call(i: int): Method_callContext
+THIS(): List&lt;TerminalNode&gt;
+THIS(i: int): TerminalNode
+STRING_CONST(): List&lt;TerminalNode&gt;
+STRING_CONST(i: int): TerminalNode
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+Digits(): List&lt;TerminalNode&gt;
+Digits(i: int): TerminalNode
+TRUE(): List&lt;TerminalNode&gt;
+TRUE(i: int): TerminalNode
+FALSE(): List&lt;TerminalNode&gt;
+FALSE(i: int): TerminalNode
+cast(): CastContext
+math_op(): List&lt;Math_opContext&gt;
+math_op(i: int): Math_opContext
+NEW(): TerminalNode
+DOT(): List&lt;TerminalNode&gt;
+DOT(i: int): TerminalNode
+CLASS(): TerminalNode
+Method_call_paramContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
CastContext
--
--
+LBRACK(): TerminalNode
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+RBRACK(): TerminalNode
+DOT(): List&lt;TerminalNode&gt;
+DOT(i: int): TerminalNode
+generic_type_name(): Generic_type_nameContext
+CastContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
MethodContext
--
--
+method_sig(): Method_sigContext
+LCBRACK(): TerminalNode
+RCBRACK(): TerminalNode
+SEMICOLON(): TerminalNode
+scope_body(): List&lt;Scope_bodyContext&gt;
+scope_body(i: int): Scope_bodyContext
+MethodContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
ScopeContext
--
--
+LCBRACK(): TerminalNode
+RCBRACK(): TerminalNode
+scope_body(): List&lt;Scope_bodyContext&gt;
+scope_body(i: int): Scope_bodyContext
+ScopeContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
ExpressionContext
--
--
+RBRACK(): List&lt;TerminalNode&gt;
+RBRACK(i: int): TerminalNode
+STRING_CONST(): List&lt;TerminalNode&gt;
+STRING_CONST(i: int): TerminalNode
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+TRUE(): List&lt;TerminalNode&gt;
+TRUE(i: int): TerminalNode
+FALSE(): List&lt;TerminalNode&gt;
+FALSE(i: int): TerminalNode
+NULL(): List&lt;TerminalNode&gt;
+NULL(i: int): TerminalNode
+RETURN(): List&lt;TerminalNode&gt;
+RETURN(i: int): TerminalNode
+method_call(): List&lt;Method_callContext&gt;
+method_call(i: int): Method_callContext
+LBRACK(): List&lt;TerminalNode&gt;
+LBRACK(i: int): TerminalNode
+THIS(): List&lt;TerminalNode&gt;
+THIS(i: int): TerminalNode
+DOT(): List&lt;TerminalNode&gt;
+DOT(i: int): TerminalNode
+math_op(): List&lt;Math_opContext&gt;
+math_op(i: int): Math_opContext
+datatype(): List&lt;DatatypeContext&gt;
+datatype(i: int): DatatypeContext
+cast(): List&lt;CastContext&gt;
+cast(i: int): CastContext
+THROW(): List&lt;TerminalNode&gt;
+THROW(i: int): TerminalNode
+NEW(): List&lt;TerminalNode&gt;
+NEW(i: int): TerminalNode
+LSQBRACK(): List&lt;TerminalNode&gt;
+LSQBRACK(i: int): TerminalNode
+RSQBRACK(): List&lt;TerminalNode&gt;
+RSQBRACK(i: int): TerminalNode
+Digits(): List&lt;TerminalNode&gt;
+Digits(i: int): TerminalNode
+ExpressionContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
ConditionContext
--
--
+RBRACK(): List&lt;TerminalNode&gt;
+RBRACK(i: int): TerminalNode
+TRUE(): List&lt;TerminalNode&gt;
+TRUE(i: int): TerminalNode
+FALSE(): List&lt;TerminalNode&gt;
+FALSE(i: int): TerminalNode
+LBRACK(): List&lt;TerminalNode&gt;
+LBRACK(i: int): TerminalNode
+comp_op(): List&lt;Comp_opContext&gt;
+comp_op(i: int): Comp_opContext
+method_call(): List&lt;Method_callContext&gt;
+method_call(i: int): Method_callContext
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+Digits(): List&lt;TerminalNode&gt;
+Digits(i: int): TerminalNode
+HexDigits(): List&lt;TerminalNode&gt;
+HexDigits(i: int): TerminalNode
+NULL(): List&lt;TerminalNode&gt;
+NULL(i: int): TerminalNode
+THIS(): List&lt;TerminalNode&gt;
+THIS(i: int): TerminalNode
+math_op(): List&lt;Math_opContext&gt;
+math_op(i: int): Math_opContext
+DOT(): List&lt;TerminalNode&gt;
+DOT(i: int): TerminalNode
+ConditionContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
If_condContext
--
--
+IF(): TerminalNode
+condition(): ConditionContext
+scope(): List&lt;ScopeContext&gt;
+scope(i: int): ScopeContext
+scope_body(): List&lt;Scope_bodyContext&gt;
+scope_body(i: int): Scope_bodyContext
+ELSE(): TerminalNode
+if_cond(): If_condContext
+If_condContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Variable_defContext
--
--
+datatype(): DatatypeContext
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+var_assign(): List&lt;Var_assignContext&gt;
+var_assign(i: int): Var_assignContext
+Variable_defContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Var_assignContext
--
--
+expression(): List&lt;ExpressionContext&gt;
+expression(i: int): ExpressionContext
+STRING_CONST(): List&lt;TerminalNode&gt;
+STRING_CONST(i: int): TerminalNode
+Digits(): List&lt;TerminalNode&gt;
+Digits(i: int): TerminalNode
+NULL(): List&lt;TerminalNode&gt;
+NULL(i: int): TerminalNode
+LCBRACK(): TerminalNode
+RCBRACK(): TerminalNode
+HexDigits(): List&lt;TerminalNode&gt;
+HexDigits(i: int): TerminalNode
+Var_assignContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
AttributeContext
--
--
+variable_def(): Variable_defContext
+SEMICOLON(): TerminalNode
+accessmod(): AccessmodContext
+STATIC(): TerminalNode
+FINAL(): TerminalNode
+AttributeContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
DatatypeContext
--
--
+INTEGER(): TerminalNode
+DOUBLE(): TerminalNode
+FLOAT(): TerminalNode
+STRING(): TerminalNode
+LONG(): TerminalNode
+SHORT(): TerminalNode
+BYTE(): TerminalNode
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+generic_type_name(): Generic_type_nameContext
+LSQBRACK(): TerminalNode
+RSQBRACK(): TerminalNode
+DOT(): List&lt;TerminalNode&gt;
+DOT(i: int): TerminalNode
+DatatypeContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Scope_bodyContext
--
--
+if_cond(): If_condContext
+try_block(): Try_blockContext
+switch_block(): Switch_blockContext
+expression(): ExpressionContext
+SEMICOLON(): TerminalNode
+for_loop(): For_loopContext
+for_each_loop(): For_each_loopContext
+do_while_loop(): Do_while_loopContext
+while_loop(): While_loopContext
+method_call(): List&lt;Method_callContext&gt;
+method_call(i: int): Method_callContext
+DOT(): List&lt;TerminalNode&gt;
+DOT(i: int): TerminalNode
+scope(): ScopeContext
+Scope_bodyContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
For_loopContext
--
--
+FOR(): TerminalNode
+LBRACK(): TerminalNode
+SEMICOLON(): List&lt;TerminalNode&gt;
+SEMICOLON(i: int): TerminalNode
+condition(): ConditionContext
+expression(): List&lt;ExpressionContext&gt;
+expression(i: int): ExpressionContext
+RBRACK(): TerminalNode
+LCBRACK(): TerminalNode
+RCBRACK(): TerminalNode
+scope_body(): List&lt;Scope_bodyContext&gt;
+scope_body(i: int): Scope_bodyContext
+For_loopContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
For_each_loopContext
--
--
+FOR(): TerminalNode
+LBRACK(): TerminalNode
+variable_def(): Variable_defContext
+RBRACK(): TerminalNode
+method_call(): List&lt;Method_callContext&gt;
+method_call(i: int): Method_callContext
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+SEMICOLON(): TerminalNode
+LCBRACK(): TerminalNode
+RCBRACK(): TerminalNode
+expression(): ExpressionContext
+DOT(): List&lt;TerminalNode&gt;
+DOT(i: int): TerminalNode
+THIS(): TerminalNode
+scope_body(): List&lt;Scope_bodyContext&gt;
+scope_body(i: int): Scope_bodyContext
+For_each_loopContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
While_loopContext
--
--
+WHILE(): TerminalNode
+LBRACK(): TerminalNode
+condition(): ConditionContext
+RBRACK(): TerminalNode
+SEMICOLON(): TerminalNode
+LCBRACK(): TerminalNode
+RCBRACK(): TerminalNode
+expression(): ExpressionContext
+scope_body(): List&lt;Scope_bodyContext&gt;
+scope_body(i: int): Scope_bodyContext
+While_loopContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Do_while_loopContext
--
--
+DO(): TerminalNode
+scope(): ScopeContext
+WHILE(): TerminalNode
+LBRACK(): TerminalNode
+condition(): ConditionContext
+RBRACK(): TerminalNode
+SEMICOLON(): TerminalNode
+Do_while_loopContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Class_defContext
--
--
+CLASS(): TerminalNode
+class_name(): List&lt;Class_nameContext&gt;
+class_name(i: int): Class_nameContext
+LCBRACK(): TerminalNode
+RCBRACK(): TerminalNode
+accessmod(): AccessmodContext
+ABSTRACT(): TerminalNode
+STATIC(): TerminalNode
+FINAL(): TerminalNode
+EXTENDS(): TerminalNode
+IMPLEMENTS(): TerminalNode
+interface_name(): List&lt;Interface_nameContext&gt;
+interface_name(i: int): Interface_nameContext
+static_block(): List&lt;Static_blockContext&gt;
+static_block(i: int): Static_blockContext
+constructor(): List&lt;ConstructorContext&gt;
+constructor(i: int): ConstructorContext
+method(): List&lt;MethodContext&gt;
+method(i: int): MethodContext
+attribute(): List&lt;AttributeContext&gt;
+attribute(i: int): AttributeContext
+class_def(): List&lt;Class_defContext&gt;
+class_def(i: int): Class_defContext
+Class_defContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Interface_defContext
--
--
+INTERFACE(): TerminalNode
+interface_name(): Interface_nameContext
+LCBRACK(): TerminalNode
+RCBRACK(): TerminalNode
+accessmod(): AccessmodContext
+EXTENDS(): TerminalNode
+class_name(): Class_nameContext
+method_sig(): List&lt;Method_sigContext&gt;
+method_sig(i: int): Method_sigContext
+SEMICOLON(): List&lt;TerminalNode&gt;
+SEMICOLON(i: int): TerminalNode
+Interface_defContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Class_nameContext
--
--
+IDENTIFIER(): TerminalNode
+generic_type_name(): Generic_type_nameContext
+Class_nameContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Interface_nameContext
--
--
+IDENTIFIER(): TerminalNode
+generic_type_name(): Generic_type_nameContext
+Interface_nameContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Static_blockContext
--
--
+STATIC(): TerminalNode
+LCBRACK(): TerminalNode
+RCBRACK(): TerminalNode
+attribute(): List&lt;AttributeContext&gt;
+attribute(i: int): AttributeContext
+scope_body(): List&lt;Scope_bodyContext&gt;
+scope_body(i: int): Scope_bodyContext
+Static_blockContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Try_blockContext
--
--
+TRY(): TerminalNode
+scope(): List&lt;ScopeContext&gt;
+scope(i: int): ScopeContext
+CATCH(): List&lt;TerminalNode&gt;
+CATCH(i: int): TerminalNode
+LBRACK(): List&lt;TerminalNode&gt;
+LBRACK(i: int): TerminalNode
+datatype(): List&lt;DatatypeContext&gt;
+datatype(i: int): DatatypeContext
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+RBRACK(): List&lt;TerminalNode&gt;
+RBRACK(i: int): TerminalNode
+FINALLY(): TerminalNode
+Try_blockContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Switch_blockContext
--
--
+SWITCH(): TerminalNode
+LBRACK(): TerminalNode
+expression(): ExpressionContext
+RBRACK(): TerminalNode
+switch_scope(): Switch_scopeContext
+Switch_blockContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Switch_scopeContext
--
--
+LCBRACK(): TerminalNode
+RCBRACK(): TerminalNode
+case_block(): List&lt;Case_blockContext&gt;
+case_block(i: int): Case_blockContext
+Switch_scopeContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Case_blockContext
--
--
+DEFAULT(): TerminalNode
+CASE(): TerminalNode
+scope_body(): List&lt;Scope_bodyContext&gt;
+scope_body(i: int): Scope_bodyContext
+BREAK(): TerminalNode
+SEMICOLON(): TerminalNode
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+STRING_CONST(): TerminalNode
+Digits(): TerminalNode
+HexDigits(): TerminalNode
+DOT(): List&lt;TerminalNode&gt;
+DOT(i: int): TerminalNode
+Case_blockContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Method_nameContext
--
--
+IDENTIFIER(): TerminalNode
+STRING(): TerminalNode
+Method_nameContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Generic_type_nameContext
--
--
+LPBRACK(): TerminalNode
+RPBRACK(): TerminalNode
+IDENTIFIER(): List&lt;TerminalNode&gt;
+IDENTIFIER(i: int): TerminalNode
+datatype(): DatatypeContext
+EXTENDS(): TerminalNode
+DOT(): List&lt;TerminalNode&gt;
+DOT(i: int): TerminalNode
+Generic_type_nameContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Comp_opContext
--
--
+INSTANCEOF(): TerminalNode
+Comp_opContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
{innerclass
Math_opContext
--
--
+Math_opContext(parent: ParserRuleContext, invokingState: int)
+enterRule(listener: ParseTreeListener)
+exitRule(listener: ParseTreeListener)
+accept(visitor: ParseTreeVisitor&lt;?extendsT&gt;): &lt;T&gt;T

innerclass}
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>1760</x><y>10</y><w>300</w><h>600</h> </coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
JavaLexerVisitor&lt;T&gt;
--
--
visitR(ctx: JavaLexerParser.RContext): T
visitAccessmod(ctx: JavaLexerParser.AccessmodContext): T
visitParameter(ctx: JavaLexerParser.ParameterContext): T
visitConstructor(ctx: JavaLexerParser.ConstructorContext): T
visitMethod_sig(ctx: JavaLexerParser.Method_sigContext): T
visitMethod_call(ctx: JavaLexerParser.Method_callContext): T
visitMethod_call_param(ctx: JavaLexerParser.Method_call_paramContext): T
visitCast(ctx: JavaLexerParser.CastContext): T
visitMethod(ctx: JavaLexerParser.MethodContext): T
visitScope(ctx: JavaLexerParser.ScopeContext): T
visitExpression(ctx: JavaLexerParser.ExpressionContext): T
visitCondition(ctx: JavaLexerParser.ConditionContext): T
visitIf_cond(ctx: JavaLexerParser.If_condContext): T
visitVariable_def(ctx: JavaLexerParser.Variable_defContext): T
visitVar_assign(ctx: JavaLexerParser.Var_assignContext): T
visitAttribute(ctx: JavaLexerParser.AttributeContext): T
visitDatatype(ctx: JavaLexerParser.DatatypeContext): T
visitScope_body(ctx: JavaLexerParser.Scope_bodyContext): T
visitFor_loop(ctx: JavaLexerParser.For_loopContext): T
visitFor_each_loop(ctx: JavaLexerParser.For_each_loopContext): T
visitWhile_loop(ctx: JavaLexerParser.While_loopContext): T
visitDo_while_loop(ctx: JavaLexerParser.Do_while_loopContext): T
visitClass_def(ctx: JavaLexerParser.Class_defContext): T
visitInterface_def(ctx: JavaLexerParser.Interface_defContext): T
visitClass_name(ctx: JavaLexerParser.Class_nameContext): T
visitInterface_name(ctx: JavaLexerParser.Interface_nameContext): T
visitStatic_block(ctx: JavaLexerParser.Static_blockContext): T
visitTry_block(ctx: JavaLexerParser.Try_blockContext): T
visitSwitch_block(ctx: JavaLexerParser.Switch_blockContext): T
visitSwitch_scope(ctx: JavaLexerParser.Switch_scopeContext): T
visitCase_block(ctx: JavaLexerParser.Case_blockContext): T
visitMethod_name(ctx: JavaLexerParser.Method_nameContext): T
visitGeneric_type_name(ctx: JavaLexerParser.Generic_type_nameContext): T
visitComp_op(ctx: JavaLexerParser.Comp_opContext): T
visitMath_op(ctx: JavaLexerParser.Math_opContext): T
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>2110</x><y>10</y><w>300</w><h>405</h> </coordinates><panel_attributes>LukeTreeListener
--
- classInfos: ArrayList&lt;GetMethods&gt;
- classInfoStack: Stack&lt;GetMethods&gt;
--
+enterClass_def(ctx: JavaLexerParser.Class_defContext)
+enterConstructor(ctx: JavaLexerParser.ConstructorContext)
+enterMethod_sig(ctx: JavaLexerParser.Method_sigContext)
+enterExpression(ctx: JavaLexerParser.ExpressionContext)
+enterAttribute(ctx: JavaLexerParser.AttributeContext)
+exitClass_def(ctx: JavaLexerParser.Class_defContext)
+enterInterface_def(ctx: JavaLexerParser.Interface_defContext)
+exitInterface_def(ctx: JavaLexerParser.Interface_defContext)
-getCurrentScope(): GetMethods
-getParameterListFromParameterContext(paramList: List&lt;JavaLexerParser.ParameterContext&gt;): ArrayList&lt;Parameter&gt;
+getClasses(): String
-getXPos(cl: GetMethods): int
-getYPos(cl: GetMethods): int
-getAY(cl: GetMethods, re: GetMethods): int
-getAX(cl: GetMethods, re: GetMethods): int
+drawRelation(sb: StringBuilder, cl: GetMethods, relation: GetMethods, type: String, yoffset: int)
+getRelations(): String
+clearStack()
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>2460</x><y>10</y><w>300</w><h>210</h> </coordinates><panel_attributes>LukeTreeWalker
--
- classInfo: ArrayList&lt;ClassInfo&gt;
- currentClass: ClassInfo
--
+LukeTreeWalker()
+visitConstructor(ctx: JavaLexerParser.ConstructorContext): Void
+visitClass_def(ctx: JavaLexerParser.Class_defContext): Void
+visitMethod_sig(ctx: JavaLexerParser.Method_sigContext): Void
-getParameterListFromParameterContext(paramList: List&lt;JavaLexerParser.ParameterContext&gt;): ArrayList&lt;Parameter&gt;
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>2810</x><y>10</y><w>300</w><h>330</h> </coordinates><panel_attributes>Main
--
_- DEFAULT_OUTPUT_FILE: String_
- luke: LukeTreeListener
- help: boolean
- umletJarpath: String
- outputFileName: String
- files: List&lt;String&gt;
- exportFormat: String
--
+main(args: String[])
-parseFiles(fileNames: List&lt;String&gt;)
-parseFiles(files: File[])
-run(args: String[])
-convertWithUMLet()
-parse(path: String)
-getHeader(): String
-getFooter(): String
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>3160</x><y>10</y><w>300</w><h>315</h> </coordinates><panel_attributes>Attribute
--
- accessModifier: String
- staticFlag: boolean
- dataType: String
- name: String
--
+Attribute(dataType: String, name: String)
+getAccessModifier(): String
+setAccessModifier(accessModifier: String)
+isStaticFlag(): boolean
+setStaticFlag(staticFlag: boolean)
+getDataType(): String
+setDataType(dataType: String)
+getName(): String
+setName(name: String)
+toString(): String
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>3510</x><y>10</y><w>300</w><h>555</h> </coordinates><panel_attributes>ClassInfo
--
- attributes: ArrayList&lt;Attribute&gt;
- innerClasses: ArrayList&lt;ClassInfo&gt;
- interfaces: ArrayList&lt;Interface&gt;
- implementedInterfaces: ArrayList&lt;String&gt;
- accessModifier: String
- staticFlag: boolean
- abstractFlag: boolean
- finalFlag: boolean
--
+ClassInfo(className: String, found: boolean)
+getAttributes(): ArrayList&lt;Attribute&gt;
+setAttributes(attributes: ArrayList&lt;Attribute&gt;)
+getInnerClasses(): ArrayList&lt;ClassInfo&gt;
+setInnerClasses(innerClasses: ArrayList&lt;ClassInfo&gt;)
+getInterfaces(): ArrayList&lt;Interface&gt;
+setInterfaces(interfaces: ArrayList&lt;Interface&gt;)
+isStaticFlag(): boolean
+setStaticFlag(staticFlag: boolean)
+isAbstractFlag(): boolean
+setAbstractFlag(abstractFlag: boolean)
+getImplementedInterfaces(): ArrayList&lt;String&gt;
+setImplementedInterfaces(implementedInterfaces: ArrayList&lt;String&gt;)
+getAccessModifier(): String
+setAccessModifier(accessModifier: String)
+isFinalFlag(): boolean
+setFinalFlag(finalFlag: boolean)
+equals(o: Object): boolean
+hashCode(): int
+filterRelations(parsed: ArrayList&lt;GetMethods&gt;)
+toUML(parsed: ArrayList&lt;GetMethods&gt;): String
+getHSize(): int
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>3860</x><y>10</y><w>300</w><h>630</h> </coordinates><panel_attributes>/GetMethods/
--
_+ classCount: int_
# methods: ArrayList&lt;Method&gt;
# x: int
# y: int
# w: int
# h: int
# name: String
# accessModifier: String
# relations: HashSet&lt;GetMethods&gt;
# parent: GetMethods
+ found: boolean
# parentForInnerClass: GetMethods
# children: ArrayList&lt;GetMethods&gt;
# implementedInterfacesRef: ArrayList&lt;GetMethods&gt;
--
+getParentForInnerClass(): GetMethods
+setParentForInnerClass(parentForInnerClass: GetMethods)
+getChildren(): ArrayList&lt;GetMethods&gt;
+getAccessModifier(): String
+setAccessModifier(accessModifier: String)
+getMethods(): ArrayList&lt;Method&gt;
+setMethods(methods: ArrayList&lt;Method&gt;)
+getAttributes(): ArrayList&lt;Attribute&gt;
+toUML(parsed: ArrayList&lt;GetMethods&gt;): String
+getName(): String
+setName(name: String)
+getX(): int
+getY(): int
+getW(): int
+getH(): int
+getRelations(): HashSet&lt;GetMethods&gt;
+setRelations(relations: HashSet&lt;GetMethods&gt;)
+getImplementedInterfacesRef(): ArrayList&lt;GetMethods&gt;
+getParent(): GetMethods
+setParent(parent: GetMethods)
+toString(): String
/</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>4210</x><y>10</y><w>300</w><h>225</h> </coordinates><panel_attributes>Interface
--
- baseInterface: Interface
--
+Interface(name: String, found: boolean)
+getAttributes(): ArrayList&lt;Attribute&gt;
+getBaseInterface(): Interface
+setBaseInterface(baseInterface: Interface)
+equals(o: Object): boolean
+hashCode(): int
+toUML(parsed: ArrayList&lt;GetMethods&gt;): String
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>4560</x><y>10</y><w>300</w><h>495</h> </coordinates><panel_attributes>Method
--
- accessModifier: String
- staticFlag: boolean
- returnType: String
- abstractFlag: boolean
- methodName: String
- parameters: ArrayList&lt;Parameter&gt;
- isConstructor: boolean
- identifiers: ArrayList&lt;String&gt;
--
+Method()
+getAccessModifier(): String
+setAccessModifier(accessModifier: String)
+isStaticFlag(): boolean
+setStaticFlag(staticFlag: boolean)
+getReturnType(): String
+setReturnType(returnType: String)
+isAbstractFlag(): boolean
+setAbstractFlag(abstractFlag: boolean)
+getMethodName(): String
+setMethodName(methodName: String)
+getParameters(): ArrayList&lt;Parameter&gt;
+setParameters(parameters: ArrayList&lt;Parameter&gt;)
+isConstructor(): boolean
+setConstructor(constructor: boolean)
+getIdentifiers(): ArrayList&lt;String&gt;
+setIdentifiers(identifiers: ArrayList&lt;String&gt;)
+toString(): String
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>4910</x><y>10</y><w>300</w><h>210</h> </coordinates><panel_attributes>Parameter
--
- dataType: String
- name: String
--
+getDataType(): String
+setDataType(dataType: String)
+getName(): String
+setName(name: String)
+toString(): String
</panel_attributes><additional_attributes/>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>1210</x>
<y>1135</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;&lt;.</panel_attributes>
<additional_attributes>0.0;0.0;-1050.0;-1020.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>1910</x>
<y>610</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;&lt;.</panel_attributes>
<additional_attributes>0.0;0.0;-1400.0;-495.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>3310</x>
<y>325</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;-1050.0;90.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>4010</x>
<y>640</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;-1750.0;-225.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>5060</x>
<y>220</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;-2800.0;195.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>4710</x>
<y>505</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;-2450.0;-90.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>3660</x>
<y>565</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;-1400.0;-150.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>4360</x>
<y>235</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;-2100.0;180.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>160</x>
<y>115</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;2100.0;300.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>5060</x>
<y>220</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;-2450.0;0.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>4710</x>
<y>505</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;-2100.0;-285.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>1560</x>
<y>1435</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;1400.0;-1095.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>2960</x>
<y>340</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;0.0;0.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>3660</x>
<y>565</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;0.0;0.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>4010</x>
<y>640</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;-350.0;-75.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>4360</x>
<y>235</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;0.0;0.0;</additional_attributes>
</element>

<element>
<id>Relation</id>
<coordinates>
<x>4010</x>
<y>640</y>
<w>0</w>
<h>0</h>
</coordinates>
<panel_attributes>lt=&lt;&lt;-</panel_attributes>
<additional_attributes>0.0;0.0;350.0;-405.0;</additional_attributes>
</element>
</diagram>