<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
<element><id>UMLClass</id><coordinates><x>710</x><y>10</y><w>300</w><h>378</h> </coordinates><panel_attributes>JavaLexerLexer
--
_# _decisionToDFA: DFA[]_
_# _sharedContextCache: PredictionContextCache_
_+ T__0: int_
_+ channelNames: String[]_
_+ modeNames: String[]_
_+ ruleNames: String[]_
_- _LITERAL_NAMES: String[]_
_- _SYMBOLIC_NAMES: String[]_
_+ VOCABULARY: Vocabulary_
_+ tokenNames: String[]_
_+ _serializedATN: String_
_+ _ATN: ATN_
--
+getTokenNames(): String[]
+getVocabulary(): Vocabulary
+JavaLexerLexer(input: CharStream)
+getGrammarFileName(): String
+getRuleNames(): String[]
+getSerializedATN(): String
+getChannelNames(): String[]
+getModeNames(): String[]
+getATN(): ATN
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>1060</x><y>10</y><w>300</w><h>1125</h> </coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
JavaLexerListener
--
--
enterR(ctx: JavaLexerParser.RContext)
exitR(ctx: JavaLexerParser.RContext)
enterAccessmod(ctx: JavaLexerParser.AccessmodContext)
exitAccessmod(ctx: JavaLexerParser.AccessmodContext)
enterParameter(ctx: JavaLexerParser.ParameterContext)
exitParameter(ctx: JavaLexerParser.ParameterContext)
enterConstructor(ctx: JavaLexerParser.ConstructorContext)
exitConstructor(ctx: JavaLexerParser.ConstructorContext)
enterMethod_sig(ctx: JavaLexerParser.Method_sigContext)
exitMethod_sig(ctx: JavaLexerParser.Method_sigContext)
enterMethod_call(ctx: JavaLexerParser.Method_callContext)
exitMethod_call(ctx: JavaLexerParser.Method_callContext)
enterMethod_call_param(ctx: JavaLexerParser.Method_call_paramContext)
exitMethod_call_param(ctx: JavaLexerParser.Method_call_paramContext)
enterCast(ctx: JavaLexerParser.CastContext)
exitCast(ctx: JavaLexerParser.CastContext)
enterMethod(ctx: JavaLexerParser.MethodContext)
exitMethod(ctx: JavaLexerParser.MethodContext)
enterScope(ctx: JavaLexerParser.ScopeContext)
exitScope(ctx: JavaLexerParser.ScopeContext)
enterExpression(ctx: JavaLexerParser.ExpressionContext)
exitExpression(ctx: JavaLexerParser.ExpressionContext)
enterCondition(ctx: JavaLexerParser.ConditionContext)
exitCondition(ctx: JavaLexerParser.ConditionContext)
enterIf_cond(ctx: JavaLexerParser.If_condContext)
exitIf_cond(ctx: JavaLexerParser.If_condContext)
enterVariable_def(ctx: JavaLexerParser.Variable_defContext)
exitVariable_def(ctx: JavaLexerParser.Variable_defContext)
enterVar_assign(ctx: JavaLexerParser.Var_assignContext)
exitVar_assign(ctx: JavaLexerParser.Var_assignContext)
enterAttribute(ctx: JavaLexerParser.AttributeContext)
exitAttribute(ctx: JavaLexerParser.AttributeContext)
enterDatatype(ctx: JavaLexerParser.DatatypeContext)
exitDatatype(ctx: JavaLexerParser.DatatypeContext)
enterScope_body(ctx: JavaLexerParser.Scope_bodyContext)
exitScope_body(ctx: JavaLexerParser.Scope_bodyContext)
enterFor_loop(ctx: JavaLexerParser.For_loopContext)
exitFor_loop(ctx: JavaLexerParser.For_loopContext)
enterFor_each_loop(ctx: JavaLexerParser.For_each_loopContext)
exitFor_each_loop(ctx: JavaLexerParser.For_each_loopContext)
enterWhile_loop(ctx: JavaLexerParser.While_loopContext)
exitWhile_loop(ctx: JavaLexerParser.While_loopContext)
enterDo_while_loop(ctx: JavaLexerParser.Do_while_loopContext)
exitDo_while_loop(ctx: JavaLexerParser.Do_while_loopContext)
enterClass_def(ctx: JavaLexerParser.Class_defContext)
exitClass_def(ctx: JavaLexerParser.Class_defContext)
enterInterface_def(ctx: JavaLexerParser.Interface_defContext)
exitInterface_def(ctx: JavaLexerParser.Interface_defContext)
enterClass_name(ctx: JavaLexerParser.Class_nameContext)
exitClass_name(ctx: JavaLexerParser.Class_nameContext)
enterInterface_name(ctx: JavaLexerParser.Interface_nameContext)
exitInterface_name(ctx: JavaLexerParser.Interface_nameContext)
enterStatic_block(ctx: JavaLexerParser.Static_blockContext)
exitStatic_block(ctx: JavaLexerParser.Static_blockContext)
enterTry_block(ctx: JavaLexerParser.Try_blockContext)
exitTry_block(ctx: JavaLexerParser.Try_blockContext)
enterSwitch_block(ctx: JavaLexerParser.Switch_blockContext)
exitSwitch_block(ctx: JavaLexerParser.Switch_blockContext)
enterSwitch_scope(ctx: JavaLexerParser.Switch_scopeContext)
exitSwitch_scope(ctx: JavaLexerParser.Switch_scopeContext)
enterCase_block(ctx: JavaLexerParser.Case_blockContext)
exitCase_block(ctx: JavaLexerParser.Case_blockContext)
enterMethod_name(ctx: JavaLexerParser.Method_nameContext)
exitMethod_name(ctx: JavaLexerParser.Method_nameContext)
enterGeneric_type_name(ctx: JavaLexerParser.Generic_type_nameContext)
exitGeneric_type_name(ctx: JavaLexerParser.Generic_type_nameContext)
enterComp_op(ctx: JavaLexerParser.Comp_opContext)
exitComp_op(ctx: JavaLexerParser.Comp_opContext)
enterMath_op(ctx: JavaLexerParser.Math_opContext)
exitMath_op(ctx: JavaLexerParser.Math_opContext)
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>1760</x><y>10</y><w>300</w><h>600</h> </coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
JavaLexerVisitor<T>
--
--
visitR(ctx: JavaLexerParser.RContext): T
visitAccessmod(ctx: JavaLexerParser.AccessmodContext): T
visitParameter(ctx: JavaLexerParser.ParameterContext): T
visitConstructor(ctx: JavaLexerParser.ConstructorContext): T
visitMethod_sig(ctx: JavaLexerParser.Method_sigContext): T
visitMethod_call(ctx: JavaLexerParser.Method_callContext): T
visitMethod_call_param(ctx: JavaLexerParser.Method_call_paramContext): T
visitCast(ctx: JavaLexerParser.CastContext): T
visitMethod(ctx: JavaLexerParser.MethodContext): T
visitScope(ctx: JavaLexerParser.ScopeContext): T
visitExpression(ctx: JavaLexerParser.ExpressionContext): T
visitCondition(ctx: JavaLexerParser.ConditionContext): T
visitIf_cond(ctx: JavaLexerParser.If_condContext): T
visitVariable_def(ctx: JavaLexerParser.Variable_defContext): T
visitVar_assign(ctx: JavaLexerParser.Var_assignContext): T
visitAttribute(ctx: JavaLexerParser.AttributeContext): T
visitDatatype(ctx: JavaLexerParser.DatatypeContext): T
visitScope_body(ctx: JavaLexerParser.Scope_bodyContext): T
visitFor_loop(ctx: JavaLexerParser.For_loopContext): T
visitFor_each_loop(ctx: JavaLexerParser.For_each_loopContext): T
visitWhile_loop(ctx: JavaLexerParser.While_loopContext): T
visitDo_while_loop(ctx: JavaLexerParser.Do_while_loopContext): T
visitClass_def(ctx: JavaLexerParser.Class_defContext): T
visitInterface_def(ctx: JavaLexerParser.Interface_defContext): T
visitClass_name(ctx: JavaLexerParser.Class_nameContext): T
visitInterface_name(ctx: JavaLexerParser.Interface_nameContext): T
visitStatic_block(ctx: JavaLexerParser.Static_blockContext): T
visitTry_block(ctx: JavaLexerParser.Try_blockContext): T
visitSwitch_block(ctx: JavaLexerParser.Switch_blockContext): T
visitSwitch_scope(ctx: JavaLexerParser.Switch_scopeContext): T
visitCase_block(ctx: JavaLexerParser.Case_blockContext): T
visitMethod_name(ctx: JavaLexerParser.Method_nameContext): T
visitGeneric_type_name(ctx: JavaLexerParser.Generic_type_nameContext): T
visitComp_op(ctx: JavaLexerParser.Comp_opContext): T
visitMath_op(ctx: JavaLexerParser.Math_opContext): T
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>2110</x><y>10</y><w>300</w><h>365</h> </coordinates><panel_attributes>LukeTreeListener
--
- classInfos: ArrayList&lt;GetMethods&gt;
- classInfoStack: Stack&lt;GetMethods&gt;
--
+enterClass_def(ctx: JavaLexerParser.Class_defContext)
+enterConstructor(ctx: JavaLexerParser.ConstructorContext)
+enterMethod_sig(ctx: JavaLexerParser.Method_sigContext)
+enterExpression(ctx: JavaLexerParser.ExpressionContext)
+enterAttribute(ctx: JavaLexerParser.AttributeContext)
+exitClass_def(ctx: JavaLexerParser.Class_defContext)
+enterInterface_def(ctx: JavaLexerParser.Interface_defContext)
+exitInterface_def(ctx: JavaLexerParser.Interface_defContext)
-getCurrentScope(): GetMethods
-getParameterListFromParameterContext(paramList: List&lt;JavaLexerParser.ParameterContext&gt;): ArrayList&lt;Parameter&gt;
+getClasses(): String
-getXPos(cl: GetMethods): int
-getYPos(cl: GetMethods): int
-getAY(cl: GetMethods, re: GetMethods): int
-getAX(cl: GetMethods, re: GetMethods): int
+drawRelation(sb: StringBuilder, cl: GetMethods, relation: GetMethods, type: String, yoffset: int)
+getRelations(): String
+clearStack()
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>2460</x><y>10</y><w>300</w><h>196</h> </coordinates><panel_attributes>LukeTreeWalker
--
- classInfo: ArrayList&lt;ClassInfo&gt;
- currentClass: ClassInfo
--
+LukeTreeWalker()
+visitConstructor(ctx: JavaLexerParser.ConstructorContext): Void
+visitClass_def(ctx: JavaLexerParser.Class_defContext): Void
+visitMethod_sig(ctx: JavaLexerParser.Method_sigContext): Void
-getParameterListFromParameterContext(paramList: List&lt;JavaLexerParser.ParameterContext&gt;): ArrayList&lt;Parameter&gt;
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>2810</x><y>10</y><w>300</w><h>300</h> </coordinates><panel_attributes>Main
--
_- DEFAULT_OUTPUT_FILE: String_
- luke: LukeTreeListener
- help: boolean
- umletJarpath: String
- outputFileName: String
- files: List&lt;String&gt;
- exportFormat: String
--
+main(args: String[])
-parseFiles(fileNames: List&lt;String&gt;)
-parseFiles(files: File[])
-run(args: String[])
-convertWithUMLet()
-parse(path: String)
-getHeader(): String
-getFooter(): String
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>3160</x><y>10</y><w>300</w><h>287</h> </coordinates><panel_attributes>Attribute
--
- accessModifier: String
- staticFlag: boolean
- dataType: String
- name: String
--
+Attribute(dataType: String, name: String)
+getAccessModifier(): String
+setAccessModifier(accessModifier: String)
+isStaticFlag(): boolean
+setStaticFlag(staticFlag: boolean)
+getDataType(): String
+setDataType(dataType: String)
+getName(): String
+setName(name: String)
+toString(): String
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>3510</x><y>10</y><w>300</w><h>495</h> </coordinates><panel_attributes>ClassInfo
--
- attributes: ArrayList&lt;Attribute&gt;
- innerClasses: ArrayList&lt;ClassInfo&gt;
- interfaces: ArrayList&lt;Interface&gt;
- implementedInterfaces: ArrayList&lt;String&gt;
- accessModifier: String
- staticFlag: boolean
- abstractFlag: boolean
- finalFlag: boolean
--
+ClassInfo(className: String, found: boolean)
+getAttributes(): ArrayList&lt;Attribute&gt;
+setAttributes(attributes: ArrayList&lt;Attribute&gt;)
+getInnerClasses(): ArrayList&lt;ClassInfo&gt;
+setInnerClasses(innerClasses: ArrayList&lt;ClassInfo&gt;)
+getInterfaces(): ArrayList&lt;Interface&gt;
+setInterfaces(interfaces: ArrayList&lt;Interface&gt;)
+isStaticFlag(): boolean
+setStaticFlag(staticFlag: boolean)
+isAbstractFlag(): boolean
+setAbstractFlag(abstractFlag: boolean)
+getImplementedInterfaces(): ArrayList&lt;String&gt;
+setImplementedInterfaces(implementedInterfaces: ArrayList&lt;String&gt;)
+getAccessModifier(): String
+setAccessModifier(accessModifier: String)
+isFinalFlag(): boolean
+setFinalFlag(finalFlag: boolean)
+equals(o: Object): boolean
+hashCode(): int
+filterRelations(parsed: ArrayList&lt;GetMethods&gt;)
+toUML(parsed: ArrayList&lt;GetMethods&gt;): String
+getHSize(): int
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>3860</x><y>10</y><w>300</w><h>547</h> </coordinates><panel_attributes>/GetMethods/
--
_+ classCount: int_
# methods: ArrayList&lt;Method&gt;
# x: int
# y: int
# w: int
# h: int
# name: String
# accessModifier: String
# relations: HashSet&lt;GetMethods&gt;
# parent: GetMethods
+ found: boolean
# parentForInnerClass: GetMethods
# children: ArrayList&lt;GetMethods&gt;
# implementedInterfacesRef: ArrayList&lt;GetMethods&gt;
--
+getParentForInnerClass(): GetMethods
+setParentForInnerClass(parentForInnerClass: GetMethods)
+getChildren(): ArrayList&lt;GetMethods&gt;
+getAccessModifier(): String
+setAccessModifier(accessModifier: String)
+getMethods(): ArrayList&lt;Method&gt;
+setMethods(methods: ArrayList&lt;Method&gt;)
+getAttributes(): ArrayList&lt;Attribute&gt;
+toUML(parsed: ArrayList&lt;GetMethods&gt;): String
+getName(): String
+setName(name: String)
+getX(): int
+getY(): int
+getW(): int
+getH(): int
+getRelations(): HashSet&lt;GetMethods&gt;
+setRelations(relations: HashSet&lt;GetMethods&gt;)
+getImplementedInterfacesRef(): ArrayList&lt;GetMethods&gt;
+getParent(): GetMethods
+setParent(parent: GetMethods)
/</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>4210</x><y>10</y><w>300</w><h>209</h> </coordinates><panel_attributes>Interface
--
- baseInterface: Interface
--
+Interface(name: String, found: boolean)
+getAttributes(): ArrayList&lt;Attribute&gt;
+getBaseInterface(): Interface
+setBaseInterface(baseInterface: Interface)
+equals(o: Object): boolean
+hashCode(): int
+toUML(parsed: ArrayList&lt;GetMethods&gt;): String
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>4560</x><y>10</y><w>300</w><h>443</h> </coordinates><panel_attributes>Method
--
- accessModifier: String
- staticFlag: boolean
- returnType: String
- abstractFlag: boolean
- methodName: String
- parameters: ArrayList&lt;Parameter&gt;
- isConstructor: boolean
- identifiers: ArrayList&lt;String&gt;
--
+Method()
+getAccessModifier(): String
+setAccessModifier(accessModifier: String)
+isStaticFlag(): boolean
+setStaticFlag(staticFlag: boolean)
+getReturnType(): String
+setReturnType(returnType: String)
+isAbstractFlag(): boolean
+setAbstractFlag(abstractFlag: boolean)
+getMethodName(): String
+setMethodName(methodName: String)
+getParameters(): ArrayList&lt;Parameter&gt;
+setParameters(parameters: ArrayList&lt;Parameter&gt;)
+isConstructor(): boolean
+setConstructor(constructor: boolean)
+getIdentifiers(): ArrayList&lt;String&gt;
+setIdentifiers(identifiers: ArrayList&lt;String&gt;)
+toString(): String
</panel_attributes><additional_attributes/>
</element>
<element><id>UMLClass</id><coordinates><x>4910</x><y>10</y><w>300</w><h>196</h> </coordinates><panel_attributes>Parameter
--
- dataType: String
- name: String
--
+getDataType(): String
+setDataType(dataType: String)
+getName(): String
+setName(name: String)
+toString(): String
</panel_attributes><additional_attributes/>
</element>
</diagram>