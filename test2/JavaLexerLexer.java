// Generated from /home/nils/Nextcloud/Master/2. Semester/Compilerbau/Projekt/JavaLexer.g4 by ANTLR 4.7
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class JavaLexerLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, COMMENT=22, LINE_COMMENT=23, ANNOTATION=24, 
		IMPORTS=25, STUFF=26, CLASS=27, PUBLIC=28, PRIVATE=29, PROTECTED=30, ABSTRACT=31, 
		STATIC=32, VOID=33, IMPLEMENTS=34, EXTENDS=35, INTERFACE=36, IMPORT=37, 
		ENUM=38, THROWS=39, THIS=40, RETURN=41, TRUE=42, FALSE=43, NEW=44, PACKAGE=45, 
		FINAL=46, IF=47, ELSE=48, NULL=49, INSTANCEOF=50, TRY=51, CATCH=52, FINALLY=53, 
		FOR=54, WHILE=55, DO=56, INTEGER=57, DOUBLE=58, FLOAT=59, STRING=60, LONG=61, 
		SHORT=62, BYTE=63, LBRACK=64, RBRACK=65, LCBRACK=66, RCBRACK=67, LSQBRACK=68, 
		RSQBRACK=69, LPBRACK=70, RPBRACK=71, SEMICOLON=72, DOT=73, SWITCH=74, 
		CASE=75, DEFAULT=76, BREAK=77, THROW=78, IDENTIFIER=79, STRING_CONST=80, 
		WS=81, HexDigits=82, Digits=83, LetterOrDigit=84, Letter=85;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "COMMENT", "LINE_COMMENT", "ANNOTATION", 
		"IMPORTS", "STUFF", "CLASS", "PUBLIC", "PRIVATE", "PROTECTED", "ABSTRACT", 
		"STATIC", "VOID", "IMPLEMENTS", "EXTENDS", "INTERFACE", "IMPORT", "ENUM", 
		"THROWS", "THIS", "RETURN", "TRUE", "FALSE", "NEW", "PACKAGE", "FINAL", 
		"IF", "ELSE", "NULL", "INSTANCEOF", "TRY", "CATCH", "FINALLY", "FOR", 
		"WHILE", "DO", "INTEGER", "DOUBLE", "FLOAT", "STRING", "LONG", "SHORT", 
		"BYTE", "LBRACK", "RBRACK", "LCBRACK", "RCBRACK", "LSQBRACK", "RSQBRACK", 
		"LPBRACK", "RPBRACK", "SEMICOLON", "DOT", "SWITCH", "CASE", "DEFAULT", 
		"BREAK", "THROW", "IDENTIFIER", "STRING_CONST", "WS", "EscapeSequence", 
		"HexDigit", "HexDigits", "Digits", "LetterOrDigit", "Letter"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "','", "'='", "'++'", "'--'", "'!'", "':'", "'|'", "'?'", "'<='", 
		"'>='", "'=='", "'!='", "'&'", "'~'", "'^'", "'&&'", "'||'", "'+'", "'-'", 
		"'*'", "'/'", null, null, null, null, null, "'class'", "'public'", "'private'", 
		"'protected'", "'abstract'", "'static'", "'void'", "'implements'", "'extends'", 
		"'interface'", "'import'", "'enum'", "'throws'", "'this'", "'return'", 
		"'true'", "'false'", "'new'", "'package'", "'final'", "'if'", "'else'", 
		"'null'", "'instanceof'", "'try'", "'catch'", "'finally'", "'for'", "'while'", 
		"'do'", "'int'", "'double'", "'float'", "'String'", "'long'", "'short'", 
		"'byte'", "'('", "')'", "'{'", "'}'", "'['", "']'", "'<'", "'>'", "';'", 
		"'.'", "'switch'", "'case'", "'default'", "'break'", "'throw'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, "COMMENT", 
		"LINE_COMMENT", "ANNOTATION", "IMPORTS", "STUFF", "CLASS", "PUBLIC", "PRIVATE", 
		"PROTECTED", "ABSTRACT", "STATIC", "VOID", "IMPLEMENTS", "EXTENDS", "INTERFACE", 
		"IMPORT", "ENUM", "THROWS", "THIS", "RETURN", "TRUE", "FALSE", "NEW", 
		"PACKAGE", "FINAL", "IF", "ELSE", "NULL", "INSTANCEOF", "TRY", "CATCH", 
		"FINALLY", "FOR", "WHILE", "DO", "INTEGER", "DOUBLE", "FLOAT", "STRING", 
		"LONG", "SHORT", "BYTE", "LBRACK", "RBRACK", "LCBRACK", "RCBRACK", "LSQBRACK", 
		"RSQBRACK", "LPBRACK", "RPBRACK", "SEMICOLON", "DOT", "SWITCH", "CASE", 
		"DEFAULT", "BREAK", "THROW", "IDENTIFIER", "STRING_CONST", "WS", "HexDigits", 
		"Digits", "LetterOrDigit", "Letter"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public JavaLexerLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "JavaLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2W\u0288\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\5\3\6\3"+
		"\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r"+
		"\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3"+
		"\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\27\7\27\u00e8"+
		"\n\27\f\27\16\27\u00eb\13\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3"+
		"\30\7\30\u00f6\n\30\f\30\16\30\u00f9\13\30\3\30\3\30\3\31\3\31\7\31\u00ff"+
		"\n\31\f\31\16\31\u0102\13\31\3\31\3\31\3\32\3\32\7\32\u0108\n\32\f\32"+
		"\16\32\u010b\13\32\3\32\3\32\3\32\3\32\3\33\3\33\7\33\u0113\n\33\f\33"+
		"\16\33\u0116\13\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3"+
		"\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3"+
		"\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3"+
		" \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#"+
		"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%"+
		"\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3)\3)\3"+
		")\3)\3)\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3-\3-\3"+
		"-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\61\3\61"+
		"\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\63"+
		"\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65"+
		"\3\65\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\38\3"+
		"8\38\38\38\38\39\39\39\3:\3:\3:\3:\3;\3;\3;\3;\3;\3;\3;\3<\3<\3<\3<\3"+
		"<\3<\3=\3=\3=\3=\3=\3=\3=\3>\3>\3>\3>\3>\3?\3?\3?\3?\3?\3?\3@\3@\3@\3"+
		"@\3@\3A\3A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3K\3"+
		"K\3K\3K\3K\3K\3K\3L\3L\3L\3L\3L\3M\3M\3M\3M\3M\3M\3M\3M\3N\3N\3N\3N\3"+
		"N\3N\3O\3O\3O\3O\3O\3O\3P\7P\u023d\nP\fP\16P\u0240\13P\3P\3P\3P\7P\u0245"+
		"\nP\fP\16P\u0248\13P\3Q\3Q\3Q\7Q\u024d\nQ\fQ\16Q\u0250\13Q\3Q\3Q\3R\3"+
		"R\3R\3R\3S\3S\3S\3S\5S\u025c\nS\3S\5S\u025f\nS\3S\3S\3S\6S\u0264\nS\r"+
		"S\16S\u0265\3S\3S\3S\3S\3S\5S\u026d\nS\3T\3T\3U\3U\3U\3U\6U\u0275\nU\r"+
		"U\16U\u0276\3V\3V\7V\u027b\nV\fV\16V\u027e\13V\3V\5V\u0281\nV\3W\3W\5"+
		"W\u0285\nW\3X\3X\5\u00e9\u0109\u0114\2Y\3\3\5\4\7\5\t\6\13\7\r\b\17\t"+
		"\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27"+
		"-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W"+
		"-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083"+
		"C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091J\u0093K\u0095L\u0097"+
		"M\u0099N\u009bO\u009dP\u009fQ\u00a1R\u00a3S\u00a5\2\u00a7\2\u00a9T\u00ab"+
		"U\u00adV\u00afW\3\2\f\4\2\f\f\17\17\6\2\f\f\17\17$$^^\5\2\13\f\17\17\""+
		"\"\n\2$$))^^ddhhppttvv\3\2\62\65\3\2\629\5\2\62;CHch\3\2\62;\4\2\62;a"+
		"a\6\2&&C\\aac|\2\u0298\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2"+
		"\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"+
		"\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2"+
		"\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2"+
		"Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3"+
		"\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2"+
		"\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2"+
		"w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2"+
		"\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b"+
		"\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2"+
		"\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d"+
		"\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a9\3\2\2"+
		"\2\2\u00ab\3\2\2\2\2\u00ad\3\2\2\2\2\u00af\3\2\2\2\3\u00b1\3\2\2\2\5\u00b3"+
		"\3\2\2\2\7\u00b5\3\2\2\2\t\u00b8\3\2\2\2\13\u00bb\3\2\2\2\r\u00bd\3\2"+
		"\2\2\17\u00bf\3\2\2\2\21\u00c1\3\2\2\2\23\u00c3\3\2\2\2\25\u00c6\3\2\2"+
		"\2\27\u00c9\3\2\2\2\31\u00cc\3\2\2\2\33\u00cf\3\2\2\2\35\u00d1\3\2\2\2"+
		"\37\u00d3\3\2\2\2!\u00d5\3\2\2\2#\u00d8\3\2\2\2%\u00db\3\2\2\2\'\u00dd"+
		"\3\2\2\2)\u00df\3\2\2\2+\u00e1\3\2\2\2-\u00e3\3\2\2\2/\u00f1\3\2\2\2\61"+
		"\u00fc\3\2\2\2\63\u0105\3\2\2\2\65\u0110\3\2\2\2\67\u011b\3\2\2\29\u0121"+
		"\3\2\2\2;\u0128\3\2\2\2=\u0130\3\2\2\2?\u013a\3\2\2\2A\u0143\3\2\2\2C"+
		"\u014a\3\2\2\2E\u014f\3\2\2\2G\u015a\3\2\2\2I\u0162\3\2\2\2K\u016c\3\2"+
		"\2\2M\u0173\3\2\2\2O\u0178\3\2\2\2Q\u017f\3\2\2\2S\u0184\3\2\2\2U\u018b"+
		"\3\2\2\2W\u0190\3\2\2\2Y\u0196\3\2\2\2[\u019a\3\2\2\2]\u01a2\3\2\2\2_"+
		"\u01a8\3\2\2\2a\u01ab\3\2\2\2c\u01b0\3\2\2\2e\u01b5\3\2\2\2g\u01c0\3\2"+
		"\2\2i\u01c4\3\2\2\2k\u01ca\3\2\2\2m\u01d2\3\2\2\2o\u01d6\3\2\2\2q\u01dc"+
		"\3\2\2\2s\u01df\3\2\2\2u\u01e3\3\2\2\2w\u01ea\3\2\2\2y\u01f0\3\2\2\2{"+
		"\u01f7\3\2\2\2}\u01fc\3\2\2\2\177\u0202\3\2\2\2\u0081\u0207\3\2\2\2\u0083"+
		"\u0209\3\2\2\2\u0085\u020b\3\2\2\2\u0087\u020d\3\2\2\2\u0089\u020f\3\2"+
		"\2\2\u008b\u0211\3\2\2\2\u008d\u0213\3\2\2\2\u008f\u0215\3\2\2\2\u0091"+
		"\u0217\3\2\2\2\u0093\u0219\3\2\2\2\u0095\u021b\3\2\2\2\u0097\u0222\3\2"+
		"\2\2\u0099\u0227\3\2\2\2\u009b\u022f\3\2\2\2\u009d\u0235\3\2\2\2\u009f"+
		"\u023e\3\2\2\2\u00a1\u0249\3\2\2\2\u00a3\u0253\3\2\2\2\u00a5\u026c\3\2"+
		"\2\2\u00a7\u026e\3\2\2\2\u00a9\u0270\3\2\2\2\u00ab\u0278\3\2\2\2\u00ad"+
		"\u0284\3\2\2\2\u00af\u0286\3\2\2\2\u00b1\u00b2\7.\2\2\u00b2\4\3\2\2\2"+
		"\u00b3\u00b4\7?\2\2\u00b4\6\3\2\2\2\u00b5\u00b6\7-\2\2\u00b6\u00b7\7-"+
		"\2\2\u00b7\b\3\2\2\2\u00b8\u00b9\7/\2\2\u00b9\u00ba\7/\2\2\u00ba\n\3\2"+
		"\2\2\u00bb\u00bc\7#\2\2\u00bc\f\3\2\2\2\u00bd\u00be\7<\2\2\u00be\16\3"+
		"\2\2\2\u00bf\u00c0\7~\2\2\u00c0\20\3\2\2\2\u00c1\u00c2\7A\2\2\u00c2\22"+
		"\3\2\2\2\u00c3\u00c4\7>\2\2\u00c4\u00c5\7?\2\2\u00c5\24\3\2\2\2\u00c6"+
		"\u00c7\7@\2\2\u00c7\u00c8\7?\2\2\u00c8\26\3\2\2\2\u00c9\u00ca\7?\2\2\u00ca"+
		"\u00cb\7?\2\2\u00cb\30\3\2\2\2\u00cc\u00cd\7#\2\2\u00cd\u00ce\7?\2\2\u00ce"+
		"\32\3\2\2\2\u00cf\u00d0\7(\2\2\u00d0\34\3\2\2\2\u00d1\u00d2\7\u0080\2"+
		"\2\u00d2\36\3\2\2\2\u00d3\u00d4\7`\2\2\u00d4 \3\2\2\2\u00d5\u00d6\7(\2"+
		"\2\u00d6\u00d7\7(\2\2\u00d7\"\3\2\2\2\u00d8\u00d9\7~\2\2\u00d9\u00da\7"+
		"~\2\2\u00da$\3\2\2\2\u00db\u00dc\7-\2\2\u00dc&\3\2\2\2\u00dd\u00de\7/"+
		"\2\2\u00de(\3\2\2\2\u00df\u00e0\7,\2\2\u00e0*\3\2\2\2\u00e1\u00e2\7\61"+
		"\2\2\u00e2,\3\2\2\2\u00e3\u00e4\7\61\2\2\u00e4\u00e5\7,\2\2\u00e5\u00e9"+
		"\3\2\2\2\u00e6\u00e8\13\2\2\2\u00e7\u00e6\3\2\2\2\u00e8\u00eb\3\2\2\2"+
		"\u00e9\u00ea\3\2\2\2\u00e9\u00e7\3\2\2\2\u00ea\u00ec\3\2\2\2\u00eb\u00e9"+
		"\3\2\2\2\u00ec\u00ed\7,\2\2\u00ed\u00ee\7\61\2\2\u00ee\u00ef\3\2\2\2\u00ef"+
		"\u00f0\b\27\2\2\u00f0.\3\2\2\2\u00f1\u00f2\7\61\2\2\u00f2\u00f3\7\61\2"+
		"\2\u00f3\u00f7\3\2\2\2\u00f4\u00f6\n\2\2\2\u00f5\u00f4\3\2\2\2\u00f6\u00f9"+
		"\3\2\2\2\u00f7\u00f5\3\2\2\2\u00f7\u00f8\3\2\2\2\u00f8\u00fa\3\2\2\2\u00f9"+
		"\u00f7\3\2\2\2\u00fa\u00fb\b\30\2\2\u00fb\60\3\2\2\2\u00fc\u0100\7B\2"+
		"\2\u00fd\u00ff\n\2\2\2\u00fe\u00fd\3\2\2\2\u00ff\u0102\3\2\2\2\u0100\u00fe"+
		"\3\2\2\2\u0100\u0101\3\2\2\2\u0101\u0103\3\2\2\2\u0102\u0100\3\2\2\2\u0103"+
		"\u0104\b\31\2\2\u0104\62\3\2\2\2\u0105\u0109\5K&\2\u0106\u0108\13\2\2"+
		"\2\u0107\u0106\3\2\2\2\u0108\u010b\3\2\2\2\u0109\u010a\3\2\2\2\u0109\u0107"+
		"\3\2\2\2\u010a\u010c\3\2\2\2\u010b\u0109\3\2\2\2\u010c\u010d\5\u0091I"+
		"\2\u010d\u010e\3\2\2\2\u010e\u010f\b\32\2\2\u010f\64\3\2\2\2\u0110\u0114"+
		"\5[.\2\u0111\u0113\13\2\2\2\u0112\u0111\3\2\2\2\u0113\u0116\3\2\2\2\u0114"+
		"\u0115\3\2\2\2\u0114\u0112\3\2\2\2\u0115\u0117\3\2\2\2\u0116\u0114\3\2"+
		"\2\2\u0117\u0118\5\u0091I\2\u0118\u0119\3\2\2\2\u0119\u011a\b\33\2\2\u011a"+
		"\66\3\2\2\2\u011b\u011c\7e\2\2\u011c\u011d\7n\2\2\u011d\u011e\7c\2\2\u011e"+
		"\u011f\7u\2\2\u011f\u0120\7u\2\2\u01208\3\2\2\2\u0121\u0122\7r\2\2\u0122"+
		"\u0123\7w\2\2\u0123\u0124\7d\2\2\u0124\u0125\7n\2\2\u0125\u0126\7k\2\2"+
		"\u0126\u0127\7e\2\2\u0127:\3\2\2\2\u0128\u0129\7r\2\2\u0129\u012a\7t\2"+
		"\2\u012a\u012b\7k\2\2\u012b\u012c\7x\2\2\u012c\u012d\7c\2\2\u012d\u012e"+
		"\7v\2\2\u012e\u012f\7g\2\2\u012f<\3\2\2\2\u0130\u0131\7r\2\2\u0131\u0132"+
		"\7t\2\2\u0132\u0133\7q\2\2\u0133\u0134\7v\2\2\u0134\u0135\7g\2\2\u0135"+
		"\u0136\7e\2\2\u0136\u0137\7v\2\2\u0137\u0138\7g\2\2\u0138\u0139\7f\2\2"+
		"\u0139>\3\2\2\2\u013a\u013b\7c\2\2\u013b\u013c\7d\2\2\u013c\u013d\7u\2"+
		"\2\u013d\u013e\7v\2\2\u013e\u013f\7t\2\2\u013f\u0140\7c\2\2\u0140\u0141"+
		"\7e\2\2\u0141\u0142\7v\2\2\u0142@\3\2\2\2\u0143\u0144\7u\2\2\u0144\u0145"+
		"\7v\2\2\u0145\u0146\7c\2\2\u0146\u0147\7v\2\2\u0147\u0148\7k\2\2\u0148"+
		"\u0149\7e\2\2\u0149B\3\2\2\2\u014a\u014b\7x\2\2\u014b\u014c\7q\2\2\u014c"+
		"\u014d\7k\2\2\u014d\u014e\7f\2\2\u014eD\3\2\2\2\u014f\u0150\7k\2\2\u0150"+
		"\u0151\7o\2\2\u0151\u0152\7r\2\2\u0152\u0153\7n\2\2\u0153\u0154\7g\2\2"+
		"\u0154\u0155\7o\2\2\u0155\u0156\7g\2\2\u0156\u0157\7p\2\2\u0157\u0158"+
		"\7v\2\2\u0158\u0159\7u\2\2\u0159F\3\2\2\2\u015a\u015b\7g\2\2\u015b\u015c"+
		"\7z\2\2\u015c\u015d\7v\2\2\u015d\u015e\7g\2\2\u015e\u015f\7p\2\2\u015f"+
		"\u0160\7f\2\2\u0160\u0161\7u\2\2\u0161H\3\2\2\2\u0162\u0163\7k\2\2\u0163"+
		"\u0164\7p\2\2\u0164\u0165\7v\2\2\u0165\u0166\7g\2\2\u0166\u0167\7t\2\2"+
		"\u0167\u0168\7h\2\2\u0168\u0169\7c\2\2\u0169\u016a\7e\2\2\u016a\u016b"+
		"\7g\2\2\u016bJ\3\2\2\2\u016c\u016d\7k\2\2\u016d\u016e\7o\2\2\u016e\u016f"+
		"\7r\2\2\u016f\u0170\7q\2\2\u0170\u0171\7t\2\2\u0171\u0172\7v\2\2\u0172"+
		"L\3\2\2\2\u0173\u0174\7g\2\2\u0174\u0175\7p\2\2\u0175\u0176\7w\2\2\u0176"+
		"\u0177\7o\2\2\u0177N\3\2\2\2\u0178\u0179\7v\2\2\u0179\u017a\7j\2\2\u017a"+
		"\u017b\7t\2\2\u017b\u017c\7q\2\2\u017c\u017d\7y\2\2\u017d\u017e\7u\2\2"+
		"\u017eP\3\2\2\2\u017f\u0180\7v\2\2\u0180\u0181\7j\2\2\u0181\u0182\7k\2"+
		"\2\u0182\u0183\7u\2\2\u0183R\3\2\2\2\u0184\u0185\7t\2\2\u0185\u0186\7"+
		"g\2\2\u0186\u0187\7v\2\2\u0187\u0188\7w\2\2\u0188\u0189\7t\2\2\u0189\u018a"+
		"\7p\2\2\u018aT\3\2\2\2\u018b\u018c\7v\2\2\u018c\u018d\7t\2\2\u018d\u018e"+
		"\7w\2\2\u018e\u018f\7g\2\2\u018fV\3\2\2\2\u0190\u0191\7h\2\2\u0191\u0192"+
		"\7c\2\2\u0192\u0193\7n\2\2\u0193\u0194\7u\2\2\u0194\u0195\7g\2\2\u0195"+
		"X\3\2\2\2\u0196\u0197\7p\2\2\u0197\u0198\7g\2\2\u0198\u0199\7y\2\2\u0199"+
		"Z\3\2\2\2\u019a\u019b\7r\2\2\u019b\u019c\7c\2\2\u019c\u019d\7e\2\2\u019d"+
		"\u019e\7m\2\2\u019e\u019f\7c\2\2\u019f\u01a0\7i\2\2\u01a0\u01a1\7g\2\2"+
		"\u01a1\\\3\2\2\2\u01a2\u01a3\7h\2\2\u01a3\u01a4\7k\2\2\u01a4\u01a5\7p"+
		"\2\2\u01a5\u01a6\7c\2\2\u01a6\u01a7\7n\2\2\u01a7^\3\2\2\2\u01a8\u01a9"+
		"\7k\2\2\u01a9\u01aa\7h\2\2\u01aa`\3\2\2\2\u01ab\u01ac\7g\2\2\u01ac\u01ad"+
		"\7n\2\2\u01ad\u01ae\7u\2\2\u01ae\u01af\7g\2\2\u01afb\3\2\2\2\u01b0\u01b1"+
		"\7p\2\2\u01b1\u01b2\7w\2\2\u01b2\u01b3\7n\2\2\u01b3\u01b4\7n\2\2\u01b4"+
		"d\3\2\2\2\u01b5\u01b6\7k\2\2\u01b6\u01b7\7p\2\2\u01b7\u01b8\7u\2\2\u01b8"+
		"\u01b9\7v\2\2\u01b9\u01ba\7c\2\2\u01ba\u01bb\7p\2\2\u01bb\u01bc\7e\2\2"+
		"\u01bc\u01bd\7g\2\2\u01bd\u01be\7q\2\2\u01be\u01bf\7h\2\2\u01bff\3\2\2"+
		"\2\u01c0\u01c1\7v\2\2\u01c1\u01c2\7t\2\2\u01c2\u01c3\7{\2\2\u01c3h\3\2"+
		"\2\2\u01c4\u01c5\7e\2\2\u01c5\u01c6\7c\2\2\u01c6\u01c7\7v\2\2\u01c7\u01c8"+
		"\7e\2\2\u01c8\u01c9\7j\2\2\u01c9j\3\2\2\2\u01ca\u01cb\7h\2\2\u01cb\u01cc"+
		"\7k\2\2\u01cc\u01cd\7p\2\2\u01cd\u01ce\7c\2\2\u01ce\u01cf\7n\2\2\u01cf"+
		"\u01d0\7n\2\2\u01d0\u01d1\7{\2\2\u01d1l\3\2\2\2\u01d2\u01d3\7h\2\2\u01d3"+
		"\u01d4\7q\2\2\u01d4\u01d5\7t\2\2\u01d5n\3\2\2\2\u01d6\u01d7\7y\2\2\u01d7"+
		"\u01d8\7j\2\2\u01d8\u01d9\7k\2\2\u01d9\u01da\7n\2\2\u01da\u01db\7g\2\2"+
		"\u01dbp\3\2\2\2\u01dc\u01dd\7f\2\2\u01dd\u01de\7q\2\2\u01der\3\2\2\2\u01df"+
		"\u01e0\7k\2\2\u01e0\u01e1\7p\2\2\u01e1\u01e2\7v\2\2\u01e2t\3\2\2\2\u01e3"+
		"\u01e4\7f\2\2\u01e4\u01e5\7q\2\2\u01e5\u01e6\7w\2\2\u01e6\u01e7\7d\2\2"+
		"\u01e7\u01e8\7n\2\2\u01e8\u01e9\7g\2\2\u01e9v\3\2\2\2\u01ea\u01eb\7h\2"+
		"\2\u01eb\u01ec\7n\2\2\u01ec\u01ed\7q\2\2\u01ed\u01ee\7c\2\2\u01ee\u01ef"+
		"\7v\2\2\u01efx\3\2\2\2\u01f0\u01f1\7U\2\2\u01f1\u01f2\7v\2\2\u01f2\u01f3"+
		"\7t\2\2\u01f3\u01f4\7k\2\2\u01f4\u01f5\7p\2\2\u01f5\u01f6\7i\2\2\u01f6"+
		"z\3\2\2\2\u01f7\u01f8\7n\2\2\u01f8\u01f9\7q\2\2\u01f9\u01fa\7p\2\2\u01fa"+
		"\u01fb\7i\2\2\u01fb|\3\2\2\2\u01fc\u01fd\7u\2\2\u01fd\u01fe\7j\2\2\u01fe"+
		"\u01ff\7q\2\2\u01ff\u0200\7t\2\2\u0200\u0201\7v\2\2\u0201~\3\2\2\2\u0202"+
		"\u0203\7d\2\2\u0203\u0204\7{\2\2\u0204\u0205\7v\2\2\u0205\u0206\7g\2\2"+
		"\u0206\u0080\3\2\2\2\u0207\u0208\7*\2\2\u0208\u0082\3\2\2\2\u0209\u020a"+
		"\7+\2\2\u020a\u0084\3\2\2\2\u020b\u020c\7}\2\2\u020c\u0086\3\2\2\2\u020d"+
		"\u020e\7\177\2\2\u020e\u0088\3\2\2\2\u020f\u0210\7]\2\2\u0210\u008a\3"+
		"\2\2\2\u0211\u0212\7_\2\2\u0212\u008c\3\2\2\2\u0213\u0214\7>\2\2\u0214"+
		"\u008e\3\2\2\2\u0215\u0216\7@\2\2\u0216\u0090\3\2\2\2\u0217\u0218\7=\2"+
		"\2\u0218\u0092\3\2\2\2\u0219\u021a\7\60\2\2\u021a\u0094\3\2\2\2\u021b"+
		"\u021c\7u\2\2\u021c\u021d\7y\2\2\u021d\u021e\7k\2\2\u021e\u021f\7v\2\2"+
		"\u021f\u0220\7e\2\2\u0220\u0221\7j\2\2\u0221\u0096\3\2\2\2\u0222\u0223"+
		"\7e\2\2\u0223\u0224\7c\2\2\u0224\u0225\7u\2\2\u0225\u0226\7g\2\2\u0226"+
		"\u0098\3\2\2\2\u0227\u0228\7f\2\2\u0228\u0229\7g\2\2\u0229\u022a\7h\2"+
		"\2\u022a\u022b\7c\2\2\u022b\u022c\7w\2\2\u022c\u022d\7n\2\2\u022d\u022e"+
		"\7v\2\2\u022e\u009a\3\2\2\2\u022f\u0230\7d\2\2\u0230\u0231\7t\2\2\u0231"+
		"\u0232\7g\2\2\u0232\u0233\7c\2\2\u0233\u0234\7m\2\2\u0234\u009c\3\2\2"+
		"\2\u0235\u0236\7v\2\2\u0236\u0237\7j\2\2\u0237\u0238\7t\2\2\u0238\u0239"+
		"\7q\2\2\u0239\u023a\7y\2\2\u023a\u009e\3\2\2\2\u023b\u023d\7a\2\2\u023c"+
		"\u023b\3\2\2\2\u023d\u0240\3\2\2\2\u023e\u023c\3\2\2\2\u023e\u023f\3\2"+
		"\2\2\u023f\u0241\3\2\2\2\u0240\u023e\3\2\2\2\u0241\u0246\5\u00afX\2\u0242"+
		"\u0245\7a\2\2\u0243\u0245\5\u00adW\2\u0244\u0242\3\2\2\2\u0244\u0243\3"+
		"\2\2\2\u0245\u0248\3\2\2\2\u0246\u0244\3\2\2\2\u0246\u0247\3\2\2\2\u0247"+
		"\u00a0\3\2\2\2\u0248\u0246\3\2\2\2\u0249\u024e\7$\2\2\u024a\u024d\n\3"+
		"\2\2\u024b\u024d\5\u00a5S\2\u024c\u024a\3\2\2\2\u024c\u024b\3\2\2\2\u024d"+
		"\u0250\3\2\2\2\u024e\u024c\3\2\2\2\u024e\u024f\3\2\2\2\u024f\u0251\3\2"+
		"\2\2\u0250\u024e\3\2\2\2\u0251\u0252\7$\2\2\u0252\u00a2\3\2\2\2\u0253"+
		"\u0254\t\4\2\2\u0254\u0255\3\2\2\2\u0255\u0256\bR\2\2\u0256\u00a4\3\2"+
		"\2\2\u0257\u0258\7^\2\2\u0258\u026d\t\5\2\2\u0259\u025e\7^\2\2\u025a\u025c"+
		"\t\6\2\2\u025b\u025a\3\2\2\2\u025b\u025c\3\2\2\2\u025c\u025d\3\2\2\2\u025d"+
		"\u025f\t\7\2\2\u025e\u025b\3\2\2\2\u025e\u025f\3\2\2\2\u025f\u0260\3\2"+
		"\2\2\u0260\u026d\t\7\2\2\u0261\u0263\7^\2\2\u0262\u0264\7w\2\2\u0263\u0262"+
		"\3\2\2\2\u0264\u0265\3\2\2\2\u0265\u0263\3\2\2\2\u0265\u0266\3\2\2\2\u0266"+
		"\u0267\3\2\2\2\u0267\u0268\5\u00a7T\2\u0268\u0269\5\u00a7T\2\u0269\u026a"+
		"\5\u00a7T\2\u026a\u026b\5\u00a7T\2\u026b\u026d\3\2\2\2\u026c\u0257\3\2"+
		"\2\2\u026c\u0259\3\2\2\2\u026c\u0261\3\2\2\2\u026d\u00a6\3\2\2\2\u026e"+
		"\u026f\t\b\2\2\u026f\u00a8\3\2\2\2\u0270\u0271\7\62\2\2\u0271\u0272\7"+
		"z\2\2\u0272\u0274\3\2\2\2\u0273\u0275\5\u00a7T\2\u0274\u0273\3\2\2\2\u0275"+
		"\u0276\3\2\2\2\u0276\u0274\3\2\2\2\u0276\u0277\3\2\2\2\u0277\u00aa\3\2"+
		"\2\2\u0278\u0280\t\t\2\2\u0279\u027b\t\n\2\2\u027a\u0279\3\2\2\2\u027b"+
		"\u027e\3\2\2\2\u027c\u027a\3\2\2\2\u027c\u027d\3\2\2\2\u027d\u027f\3\2"+
		"\2\2\u027e\u027c\3\2\2\2\u027f\u0281\t\t\2\2\u0280\u027c\3\2\2\2\u0280"+
		"\u0281\3\2\2\2\u0281\u00ac\3\2\2\2\u0282\u0285\5\u00afX\2\u0283\u0285"+
		"\t\t\2\2\u0284\u0282\3\2\2\2\u0284\u0283\3\2\2\2\u0285\u00ae\3\2\2\2\u0286"+
		"\u0287\t\13\2\2\u0287\u00b0\3\2\2\2\25\2\u00e9\u00f7\u0100\u0109\u0114"+
		"\u023e\u0244\u0246\u024c\u024e\u025b\u025e\u0265\u026c\u0276\u027c\u0280"+
		"\u0284\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}